/*
Add transition to containers so they can push in and out.
*/
#layout,
#menu,
a.menu-link,
.content {
	-webkit-transition: all 0.2s ease-out;
	-moz-transition: all 0.2s ease-out;
	-ms-transition: all 0.2s ease-out;
	-o-transition: all 0.2s ease-out;
	transition: all 0.2s ease-out;
}

/*
This is the parent `<div>` that contains the menu and the content area.
*/
#layout {
	position: relative;
	padding-left: 0;
}

	#layout.active #menu {
		left: 15rem;
		width: 15rem;
	}

	#layout.active .menu-link {
		left: 15rem;
	}

/*
The `#menu` `<div>` is the parent `<div>` that contains the `.pure-menu` that
appears on the left side of the page.
*/

#menu {
	margin-left: -15rem; /* "#menu" width */
	width: 15rem;
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	z-index: 1000; /* so the menu or its navicon stays above all content */
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
}

/* -- Dynamic Button For Responsive Menu -------------------------------------*/

/*
The button to open/close the Menu is custom-made and not part of Pure. Here's
how it works:
*/

/*
`.menu-link` represents the responsive menu toggle that shows/hides on
small screens.
*/
.menu-link {
	width: 100%;
	position: fixed;
	display: block; /* show this only on small screens */
	top: 0;
	left: 0; /* "#menu width" */
	background: #000;
	background: rgba(0,0,0,0.7);
	font-size: 10px; /* change this value to increase/decrease button size */
	z-index: 10;
	box-sizing: content-box;
	-webkit-box-sizing: content-box;
	padding: 1.5rem 1rem;
}

.menu-link:hover,
.menu-link:focus {
	background: #000;
}

.menu-link span {
	position: relative;
	display: block;
}

.menu-link span,
.menu-link span:before,
.menu-link span:after {
	background-color: #fff;
	width: 1.5rem;
	height: 0.2em;
}

.menu-link span:before,
.menu-link span:after {
	position: absolute;
	margin-top: -0.6em;
	content: " ";
}

.menu-link span:after {
	margin-top: 0.6em;
}

/* -- Responsive Styles (Media Queries) ------------------------------------- */

/*
Hides the menu at `48em`, but modify this based on your app's needs.
*/
@media (min-width: 48em) {

	#layout {
		padding-left: 15rem; /* left col width "#menu" */
		left: 0;
	}

	#menu {
		left: 15rem;
	}

	.menu-link {
		position: fixed;
		left: 15rem;
		display: none;
	}

	#layout.active .menu-link {
		left: 15rem;
	}

}

@media (max-width: 48em) {
	/* Only apply this when the window is small. Otherwise, the following
	case results in extra padding on the left:
		* Make the window small.
		* Tap the menu to trigger the active state.
		* Make the window large again.
	*/
	#layout.active {
		position: relative;
		left: 15rem;
	}

}
